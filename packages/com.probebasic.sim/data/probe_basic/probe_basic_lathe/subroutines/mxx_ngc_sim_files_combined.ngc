//////////////////////////////  TOOLCHANGE  /////////////////////////////

o<toolchange> sub
(print, o<toolchange>)


;assign the tool numbers held in parameters to the pocket numbers
#1 = #5190
#2 = #5191
#3 = #5192
#4 = #5193
#5 = #5194
#6 = #5195
#7 = #5196
#8 = #5197
#9 = #5198
#10= #5199
#11= #5200
#12= #5201


;assign the variables passed by M6 to some parameters
#100= #<selected_tool>      
#110= #<tool_in_spindle>    
#120= #<selected_pocket>    
  

O10 if [#100 EQ #110] ; checks if tool in the spindle is same as requested
 o<toolchange> endsub [1]
M2
O10 endif


#<next_pocket>= 0 ; assigns 0 to the next pocket for a later check if the tool is found in the carousel
#<open_pocket>= 0


#15 = 12 ;assign test parameter the number of pockets in the carousel
O100 do
 	O110 if [#[5189+#15] EQ #100] ; checks all pockets to see if it contains tool number requested as the new tool
		#<next_pocket> = #15 ; if tool is found in pocket, assigns the next pocket
			
	O110 endif

	O115 if [#[5189+#15] EQ 0] ; checks if the pocket is empty, last pocket checked will be the lowest empty pocket number, for putting tool in spindle away.
		#<open_pocket> = #15
		
	O115 endif
  #15= [#15-1]
O100 while [#15 GT 0]


O120 if [#<next_pocket> EQ 0] ;if tool is not found, aborts and sends a message
  (abort, tool not in carousel load tool into carousel using M23 - Manual or M25 - Auto)
O120 endif


;now we know which pocket the next tool is sitting in
;we need to know if we need to put a tool away
;or if there is not tool in the spindle


O180 IF [#110 GT 0] ; checks if there is a valid tool in the spindle
    	O190 if [#<open_pocket> EQ 0] ;If there is a tool in the spindle, checks if there is an open pocket
		(abort, carousel is full, cant put away tool in into carousel)
	O190 endif

	M10 P[#<open_pocket>] ; move carousel to an open pocket 
    	M21 ; puts the tool in spindle away into the open pocket
        #30 = #<open_pocket>
	##30 = #110 ; save tool number in pocket
	#5210= 0 ; empty tool in the spindle
O180 ENDIF


G0 G53 Z0

O200 IF [#100 GT 0] ; selected tool is not tool0
    M10 P#<next_pocket> ;set the carousel to move to the right pocket for the selected tool
    M64 P0
    M66 P1 L3 Q5 ;check carousel out position sensor
    O205 if [#5399 LT 0]
	 ; turn off the solonoid to send atc to tol change
      (abort, failed to send carousel home) ; abort if the 	sensor does not activate in 5 seconds
    O205 endif
    

    M22 ;Carousel out
    #25 = #<next_pocket>
    ##25 =0 ; empty the pocket 
    
    #5210 = #100 ;Set persistent variable to remember tool in spindle after power cycle
	
O200 Else

M65 P2 ; deactive drawbar
M65 P0 ; move carousel home

M66 P0 L3 Q4 ;check carousel in position sensor
   O210 if [#5399 LT 0]	 
  ;(abort, failed to send carousel home) ; abort if the 	sensor does not activate in 5 seconds
   O210 endif
O200 ENDIF 



;assign the tool numbers in the pockets to the parameters 
#5190= #1
#5191= #2
#5192= #3
#5193= #4
#5194= #5
#5195= #6
#5196= #7
#5197= #8
#5198= #9
#5199= #10
#5200= #11
#5201= #12

M61 Q#100
o<toolchange> endsub [1]

M2

////////////////////////////  M10  /////////////////////////////////////

o<m10> sub

; Move tool carousel best direction to pocket P
; Parameter #5170 is used to track the current tool pocket (persistently)

O110 if [#5171 NE 1]
     M13 
O110 endif


#<steps> = [#5170 - #<p>]
(print, o<M10> P#<p>, steps=#<steps>)
o1000 if [#<steps> GT 6]
    #<steps>=[#<steps> - 12]
o1000 endif
o1001 if [#<steps> LT -6]
    #<steps>=[#<steps> + 12]
o1001 endif


o1003 if [#<steps> GT 0]

    M12 P[#<steps>]
    
o1003 elseif [#<steps> LT 0]
    #<steps>=[#<steps> * -1]
    M11 P[#<steps>]
o1003 endif

o<m10> endsub [1]

M2

//////////////////////////////  M11  ////////////////////////////////////

o<m11> sub

; Move tool carousel CCW Parameter P number of steps
; Without parameter one step CCW.
; Parameter #5170 is used to track the current tool pocket (persistently)
(print, o<M11> P#<p>)
O100 if [EXISTS[#<p>]]
   #<Steps_to_move> = #<p>
O100 else
   #<Steps_to_move>=1
O100 endif
O110 if [#5171 NE 1]
      (abort, atc not homed-m13 to home)
O110 endif
     
M64 P4 ; Move atc motor Rev

O120 do
   M66 P4 L1 Q3 ; wait for rising edge on rotation index
   O130 if [#5399 LT 0]
      (abort, failed to get rotation index)
      M65 P4 ; Stop atc motor
   O130 endif
   #5170 = [[[#5170+2] MOD 12]-1]    ;Pocket is no.1-12
   #<Steps_to_move> = [#<Steps_to_move>-1]
O120 while [#<Steps_to_move> GT 0]
M65 P4 ; Stop motor
#<_my_current_pocket> = #5170
o<m11> endsub [1]

M2

//////////////////////////////  M12  ////////////////////////////////////

o<m12> sub

; Move tool carousel CW Parameter P number of steps
; Without parameter one step CW.
; Parameter #5170 is used to track the current tool pocket (persistently)
(print, o<M11> P#<p>)
O100 if [EXISTS[#<p>]]
   #<Steps_to_move> = #<p>
O100 else
   #<Steps_to_move>=1
O100 endif
O110 if [#5171 NE 1]
      M13
O110 endif
     
M64 P3 ; Move atc motor FWD

O120 do
   M66 P4 L2 Q3 ; wait for falling edge on rotation index
   O130 if [#5399 LT 0]
      (abort, failed to get rotation index)
      M65 P3 ; Stop atc motor
   O130 endif
   #5170 = [[[#5170-2] MOD 12]+1]    ;Pocket is no.1-12
   #<Steps_to_move> = [#<Steps_to_move>-1]
O120 while [#<Steps_to_move> GT 0]
M65 P3 ; Stop motor

o<m11> endsub [1]

M2

//////////////////////////////  M13  ////////////////////////////////////

o<m13> sub

; Move tool carousel CCW until ATC zero
; ; Parameter #5170 is used to track the current tool pocket (persistently)
(print, o<M13> P#<p>)

M64 P3 ; Move Motor FWD
M66 P3 L1 Q20
 O120 if [#5399 LT 0]
      (abort, failed to home carousel)
      M65 P3; stop motor
 O120 endif
   #5170 = 1
M65 P3 ; Stop motor
#5171 = 1
o<m13> endsub [1]

M2

//////////////////////////////  M21  ////////////////////////////////////

o<m21> sub

; Move Carousel to the tool change poistion - OUT
(print, o<M21>)
M66 P1 L3 Q1
;   O100 if [#5399 eq 0]
;      (abort, carousel aready in out position) ; 
;      
;   O100 endif

M5 M9
G0 G53 Z-100 ; move to tool change position

M19 R0 Q3 ; oreient spindle
 
M64 P0 ; Move Carousel out
M66 P1 L3 Q5 ; check for carousel out semsor
   O130 if [#5399 LT 0]
      (abort, atc not in position)      
   O130 endif

M24 ;activate drawbar, release the tool
M5 ; turn off spindle lock

G0 G53 Z0 ; move z to clear height
   
#5210 = 0; save fact there is now no tool in the spindle

o<m21> endsub [1]

M2

//////////////////////////////  M22  ////////////////////////////////////

o<m22> sub

; Move Carousel to the home position - IN

(print, o<M22>)

M19 R0 Q2
;M66 P0 L3 Q1 
;   O110 if [#5399 EQ 0]
;      ;(abort, carousel already home) ; abort if carousel is home already
;   O110 endif

M24
M19 R0 Q1
G0 G53 Z-100 ; rapid move to above the toolchange position

M65 P2 ; release the drawbar to clamp the tool
M5
M66 P5 L3 Q1 ; check the tool clamped sensor
   O140 if [#5399 LT 0]
      (abort, failed to reclamp tool)
      
   O140 endif
;#5210= #<_current_tool> ; save the tool in the spindle

M65 P0 ; Move Carousel home

M66 P0 L3 Q4 ;check carousel in position sensor
   O150 if [#5399 LT 0]
      (abort, failed to send carousel home) ; abort if the sensor does not activate in 5 seconds
   O150 endif

o<m22> endsub [1]

M2

//////////////////////////////  M23  ////////////////////////////////////

EMPTY

//////////////////////////////  M24  ////////////////////////////////////

o<m24> sub


M64 P2 ; unclamp the tool

M66 P2 L3 Q2 ;check the unclamped tool sensor 
   O130 if [#5399 LT 0]
      (abort, failed to release tool) ; abort if the sensor does not activate in 2 seconds
      M65 P2 ; turn off the drawbar
   O130 endif


o<m24> endsub [1]

M2

//////////////////////////////  M25  ////////////////////////////////////

o<m25> sub
M64 P0 ; Move Carousel out
M66 P1 L3 Q5 ; check for carousel out semsor
   O130 if [#5399 LT 0]
      (abort, atc not in position)
   O130 endif
M2

//////////////////////////////  M26  ////////////////////////////////////

EMPTY

//////////////////////////////  END  ////////////////////////////////////

